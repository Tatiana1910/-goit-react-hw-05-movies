{"version":3,"file":"static/js/468.c64bf3e5.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.style.js","components/BackLink/BackLink.jsx","Fetch/getMovieById.jsx","Pages/MovieDetails.styled.js","Pages/MovieDetails.jsx","components/Cast/Cast.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  padding: 7px 12px;\n  margin-bottom: 30px;\n  margin-top: 30px;\n  border-radius: 5px;\n  display: flex;\n  justify-content: center;\n  width: 70px;\n  gap: 5px;\n  align-items: center;\n  color: black;\n  font-size: 20px;\n  font-weight: 500;\n  border: 1px solid black;\n  transform: scale(1);\n  box-shadow: rgb(134 42 46) 0px 8px 8px 4px;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n","import { TiArrowBackOutline } from 'react-icons/ti';\nimport { StyledLink } from './BackLink.style';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <TiArrowBackOutline size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","async function getMovieById(movieId) {\n  const key = '9f20d64b7d570e0ac3d9098807701877';\n  const url = `https://api.themoviedb.org/3/movie/${movieId}`;\n  const filter = `?api_key=${key}&language=en-US`;\n\n  const response = await fetch(`${url}${filter}`);\n  const data = await response.json();\n  return data;\n}\n\nexport default getMovieById;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const DivMovie = styled.div`\n  display: flex;\n  gap: 40px;\n  font-weight: 500;\n  padding: 30px 150px;\n`;\n\nexport const MoviePicture = styled.img`\n  border-radius: 5px;\n  box-shadow: 10px 10px 8px 1px rgba(0, 0, 0, 0.2);\n`;\n\nexport const Title = styled.h2`\n  font-size: 30px;\n  font-weight: 700;\n  color: rgba(9, 60, 61, 1);\n  text-shadow: rgba(0, 0, 0, 0.3) 4px 4px 6px;\n  margin: 0;\n  margin-bottom: 30px;\n`;\n\nexport const SubTitle = styled.h3`\n  letter-spacing: 1.7;\n  margin-bottom: 20px;\n  margin-top: 20px;\n  font-size: 20px;\n  font-weight: 500px;\n  color: rgba(47, 56, 56, 1);\n`;\n\nexport const P = styled.p`\n  text-align: justify;\n`;\n\nexport const Genres = styled.ul`\n  display: flex;\n  margin-left: 0;\n  padding-left: 0;\n  list-style-type: none;\n  font-weight: 500;\n`;\n\nexport const AdditionalDiv = styled.div`\n  /* margin: auto; */\n  text-align: center;\n  margin-bottom: 50px;\n`;\n\nexport const DivLinkStyle = styled.div`\n  width: 400px;\n  margin: auto;\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 20px;\n`;\nexport const LinkStyle = styled(NavLink)`\n  border: 2px solid rgb(195, 173, 255);\n  border-radius: 25px;\n  font-size: 22px;\n  width: 200px;\n  margin: auto;\n  &.active {\n    background-color: rgb(229 213 221);\n    &:hover,\n    &:focus {\n      color: inherit;\n    }\n  }\n`;\nexport const Container = styled.section`\n  padding: 0 15px;\n\n  @media (min-width: 768px) {\n    padding: 0 30px;\n  }\n`;\n","import { BackLink } from '../components/BackLink/BackLink';\nimport { useState, useEffect, Suspense } from 'react';\nimport Cast from 'components/Cast/Cast';\nimport Reviews from 'components/Reviews/Reviews';\n\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\n\nimport getMovieById from 'Fetch/getMovieById';\nimport {\n  DivMovie,\n  MoviePicture,\n  P,\n  SubTitle,\n  Title,\n  Genres,\n  AdditionalDiv,\n  LinkStyle,\n  DivLinkStyle,\n  Container,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const [movieId, setMovieId] = useState(null);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    getMovieById(id).then(setMovieId);\n  }, [id]);\n\n  if (!movieId) {\n    return null;\n  }\n\n  const {\n    poster_path,\n    original_title,\n    original_name,\n    release_date,\n    first_air_date,\n    vote_average,\n    genres,\n    overview,\n  } = movieId;\n\n  return (\n    <main>\n      <Container>\n        <BackLink to={backLinkHref}></BackLink>\n        <DivMovie>\n          <MoviePicture\n            src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n            alt={original_title}\n            width=\"300\"\n          />\n\n          <div>\n            <Title>\n              {original_title || original_name} (\n              <span>{parseInt(release_date || first_air_date)}</span>)\n            </Title>\n            <P>User Score: {`${Math.round(vote_average * 10)}%`}</P>\n            <SubTitle>Overview</SubTitle>\n            <P>{overview}</P>\n            <SubTitle>Genres</SubTitle>\n            <Genres>\n              {genres.map((genre, index) => (\n                <li key={index} style={{ marginRight: '10px' }}>\n                  {genre.name}\n                </li>\n              ))}\n            </Genres>\n          </div>\n        </DivMovie>\n\n        <AdditionalDiv>\n          <h3>Additional Information</h3>\n          <DivLinkStyle>\n            <LinkStyle to=\"cast\" state={{ from: location.state.from }}>\n              <Cast />\n            </LinkStyle>\n\n            <LinkStyle to=\"reviews\" state={{ from: location.state.from }}>\n              <Reviews />\n            </LinkStyle>\n          </DivLinkStyle>\n        </AdditionalDiv>\n        <Suspense fallback={<div>Loading subpage...</div>}>\n          <Outlet />\n        </Suspense>\n      </Container>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","const Cast = () => {\n  return <>Cast</>;\n};\n\nexport default Cast;\n","const Reviews = () => {\n  return <>Reviews</>;\n};\n\nexport default Reviews;\n"],"names":["StyledLink","styled","Link","BackLink","to","children","size","getMovieById","movieId","url","filter","fetch","response","json","data","DivMovie","MoviePicture","Title","SubTitle","P","Genres","AdditionalDiv","DivLinkStyle","LinkStyle","NavLink","Container","id","useParams","useState","setMovieId","location","useLocation","backLinkHref","state","from","useEffect","then","poster_path","original_title","original_name","release_date","first_air_date","vote_average","genres","overview","src","alt","width","parseInt","Math","round","map","genre","index","style","marginRight","name","Cast","Reviews","Suspense","fallback"],"sourceRoot":""}