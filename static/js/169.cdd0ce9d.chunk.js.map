{"version":3,"file":"static/js/169.cdd0ce9d.chunk.js","mappings":"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","sources":["components/MoviesPageList/MoviesPageList.styled.js","components/MoviesPageCard/MoviesPageCard.styled.js","components/MoviesPageCard/MoviesPageCard.jsx","components/MoviesPageList/MoviesPageList.jsx","Pages/Movies/Movies.styled.js","Fetch/getSearchMovies.jsx","Pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const GalleryList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  justify-content: space-evenly;\n  gap: 30px;\n  color: black;\n  padding: 0;\n`;\nexport const Section = styled.section`\n  padding: 15px;\n\n  background-color: beige;\n\n  @media (min-width: 768px) {\n    padding: 30px;\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const GalleryItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  /* gap: 15px; */\n  list-style: none;\n  height: auto;\n  width: 240px;\n  background-color: rgb(201 27 108 / 25%);\n  text-align: center;\n  border-radius: 10px;\n  box-shadow: 10px 10px 8px 1px rgba(0, 0, 0, 0.2);\n  transform: scale(1);\n  transition: transform 250ms linear;\n  &:hover {\n    transform: scale(1.04);\n  }\n`;\n\nexport const GalleryImage = styled.img`\n  display: block;\n  /* height: 360px; */\n  width: 100%;\n  height: 360px;\n  border-radius: 10px;\n  color: black;\n`;\n\nexport const MovieTitle = styled.p`\n  margin: 0;\n  padding: 10px;\n  font-size: 18px;\n`;\n\nexport const LinkStyle = styled(Link)`\n  text-decoration: none;\n  color: black;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  GalleryItem,\n  GalleryImage,\n  MovieTitle,\n  LinkStyle,\n} from './MoviesPageCard.styled';\nimport no_image from '../../Fetch/defaultImage/no-thumb.jpg';\nimport { useLocation } from 'react-router-dom';\n\nfunction MoviesPageCard({ movie: { id, title, poster_path }, query }) {\n  const location = useLocation();\n\n  return (\n    <GalleryItem>\n      <LinkStyle to={`/movies/${id}/`} state={{ from: location }}>\n        {poster_path === null ? (\n          <GalleryImage src={no_image} alt={title} />\n        ) : (\n          <GalleryImage\n            src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n            alt={title}\n          />\n        )}\n        <MovieTitle>{title}</MovieTitle>\n      </LinkStyle>\n    </GalleryItem>\n  );\n}\n\nMoviesPageCard.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n  }).isRequired,\n  query: PropTypes.string,\n};\n\nexport default MoviesPageCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { GalleryList, Section } from './MoviesPageList.styled';\nimport MoviesPageCard from 'components/MoviesPageCard/MoviesPageCard';\n\nfunction MoviesPageList({ movies }) {\n  return (\n    <Section>\n      <GalleryList>\n        {movies &&\n          movies.map(movie => <MoviesPageCard key={movie.id} movie={movie} />)}\n      </GalleryList>\n    </Section>\n  );\n}\n\nMoviesPageList.propTypes = {\n  movies: PropTypes.array,\n};\n\nexport default MoviesPageList;\n","import styled from 'styled-components';\nimport { BsSearch } from 'react-icons/bs';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  border: 1px solid black;\n  margin: auto;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  padding: 10px;\n  border-radius: 10px;\n  box-shadow: rgb(134 42 46) 0px 8px 8px 4px;\n  background-color: rgb(84 79 81 / 25%);\n`;\nexport const Input = styled.input`\n  display: inline-flex;\n  width: 100%;\n  padding: 8px 32px 8px 8px;\n  border-radius: 10px;\n  outline: none;\n  padding-left: 10px;\n  padding-right: 10px;\n  font-size: 18px;\n\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const Icon = styled(BsSearch)`\n  width: 25px;\n  height: 25px;\n`;\n\nexport const SearchButton = styled.button`\n  width: 60px;\n  height: 40px;\n  background-color: transparent;\n  border-radius: 10px;\n  cursor: pointer;\n  border: 0;\n  transition: background-color 250ms linear;\n  :hover,\n  :focus-visible {\n    background-color: rgb(168 148 160);\n  }\n`;\n","async function getSearchMovies(query, page = 1) {\n  const TOKEN = '9f20d64b7d570e0ac3d9098807701877';\n  const url = `https://api.themoviedb.org/3/search/movie`;\n  const filter = `?api_key=${TOKEN}&query=${query}&language=en-US&page=${page}&include_adult=false`;\n\n  const response = await fetch(`${url}${filter}`);\n  const data = await response.json();\n  return data.results;\n}\n\nexport default getSearchMovies;\n","import MoviesPageList from 'components/MoviesPageList/MoviesPageList';\nimport { Form, Icon, Input, SearchButton } from 'Pages/Movies/Movies.styled';\n\nimport getSearchMovies from 'Fetch/getSearchMovies';\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [inputValue, setInputValue] = useState('');\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!query) return;\n    getSearchMovies(query)\n      .then(setMovies)\n      .catch(function (error) {\n        console.log('Error: ' + error);\n      });\n  }, [query]);\n\n  const onSubmitForm = e => {\n    if (!inputValue) {\n      setMovies([]);\n      return;\n    }\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams(\n      inputValue !== '' ? { query: form.elements.query.value } : {}\n    );\n    setInputValue('');\n    form.reset();\n  };\n\n  const onChangeInput = value => {\n    setInputValue(value);\n  };\n\n  if (!movies) {\n    return null;\n  }\n\n  return (\n    <main>\n      <Form onSubmit={onSubmitForm}>\n        <Input\n          name=\"query\"\n          type=\"text\"\n          value={inputValue}\n          onChange={e =>\n            onChangeInput(e.currentTarget.value.toLocaleLowerCase())\n          }\n          placeholder=\"SearchMovies\"\n        />\n        <SearchButton type=\"submit\">\n          <Icon />\n        </SearchButton>\n      </Form>\n      {movies && <MoviesPageList query={query} movies={movies} />}\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["GalleryList","styled","Section","GalleryItem","GalleryImage","MovieTitle","LinkStyle","Link","movie","id","title","poster_path","location","query","useLocation","to","state","from","src","no_image","alt","movies","map","Form","Input","Icon","BsSearch","SearchButton","getSearchMovies","page","url","filter","fetch","response","json","data","results","useState","setMovies","useSearchParams","searchParams","setSearchParams","inputValue","setInputValue","get","useEffect","then","catch","error","console","log","onSubmit","e","preventDefault","form","currentTarget","elements","value","reset","name","type","onChange","toLocaleLowerCase","placeholder"],"sourceRoot":""}