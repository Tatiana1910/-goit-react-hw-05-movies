{"version":3,"file":"static/js/456.f77ff244.chunk.js","mappings":"2NAAeA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BC,GAA5B,mFACc,mCACNC,EAFR,6CAEoDD,EAFpD,YAGQE,EAHR,mBACc,mCADd,4BAKyBC,MAAM,GAAD,OAAIF,GAAJ,OAAUC,IALxC,cAKQE,EALR,gBAMqBA,EAASC,OAN9B,cAMQC,EANR,yBAQSA,EAAKC,MARd,mEAWA,I,MAAA,E,SAX4B,GAAbR,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,E,6CCEFS,EAAYC,EAAAA,GAAAA,GAAH,iJAQTC,EAAYD,EAAAA,GAAAA,GAAH,0DAITE,EAAWF,EAAAA,GAAAA,IAAH,0H,SC4BrB,EArCa,WACX,IAAQG,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACRlB,EAAaa,GAAIM,KAAKF,EACvB,GAAE,CAACJ,IAECG,GAKH,+BACE,SAACP,EAAD,UACGO,EAAQI,OAAS,GAChBJ,EAAQK,KAAI,YAAqD,IAAlDR,EAAiD,EAAjDA,GAAIS,EAA6C,EAA7CA,cAAeC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAC3C,OACE,UAACb,EAAD,WACmB,MAAhBa,GACC,SAACZ,EAAD,CAAUa,IAAKC,EAAOC,IAAKL,KAE3B,SAACV,EAAD,CACEa,IAAG,yCAAoCD,GACvCG,IAAKL,KAGT,wBAAKA,KACL,sCAAcC,OAVAV,EAanB,QAtBA,IA0BV,C,0GCxCD,SAASe,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOlB,KAAKa,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["Fetch/getMovieCast.jsx","components/Cast/Cast.styled.js","components/Cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["async function getMovieCast(movieId) {\n  const key = '9f20d64b7d570e0ac3d9098807701877';\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/credits`;\n  const filter = `?api_key=${key}&language=en-US`;\n\n  const response = await fetch(`${url}${filter}`);\n  const data = await response.json();\n\n  return data.cast;\n}\n\nexport default getMovieCast;\n","import styled from 'styled-components';\n\nexport const ListActor = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  justify-content: center;\n  list-style-type: none;\n  padding: 0;\n`;\nexport const ItemActor = styled.li`\n  width: calc((100%-100px) / 9);\n`;\n\nexport const ImgActor = styled.img`\n  border-radius: 5px;\n  box-shadow: 10px 10px 8px 2px rgba(0, 0, 0, 0.3);\n  object-fit: cover;\n`;\n","import getMovieCast from 'Fetch/getMovieCast';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport noImg from '../../Fetch/defaultImage/no-thumb.jpg';\nimport { ImgActor, ItemActor, ListActor } from './Cast.styled';\nconst Cast = () => {\n  const { id } = useParams();\n  const [credits, setCredits] = useState([]);\n\n  useEffect(() => {\n    getMovieCast(id).then(setCredits);\n  }, [id]);\n\n  if (!credits) {\n    return null;\n  }\n\n  return (\n    <>\n      <ListActor>\n        {credits.length > 0 &&\n          credits.map(({ id, original_name, character, profile_path }) => {\n            return (\n              <ItemActor key={id}>\n                {profile_path == null ? (\n                  <ImgActor src={noImg} alt={original_name} />\n                ) : (\n                  <ImgActor\n                    src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n                    alt={original_name}\n                  />\n                )}\n                <h4>{original_name}</h4>\n                <p>Character:{character}</p>\n              </ItemActor>\n            );\n          })}\n      </ListActor>\n    </>\n  );\n};\n\nexport default Cast;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["getMovieCast","movieId","url","filter","fetch","response","json","data","cast","ListActor","styled","ItemActor","ImgActor","id","useParams","useState","credits","setCredits","useEffect","then","length","map","original_name","character","profile_path","src","noImg","alt","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}