{"version":3,"file":"static/js/393.9b917cbf.chunk.js","mappings":"2NAAeA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BC,GAA/B,mFACc,mCACNC,EAFR,6CAEoDD,EAFpD,YAGQE,EAHR,mBACc,mCADd,mCAKyBC,MAAM,GAAD,OAAIF,GAAJ,OAAUC,IALxC,cAKQE,EALR,gBAMqBA,EAASC,OAN9B,cAMQC,EANR,yBAOSA,EAAKC,SAPd,mEAUA,I,QAAA,E,SAV+B,GAAhBR,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,E,oCCEFS,EAAOC,EAAAA,GAAAA,GAAH,6CAIJC,EAAQD,EAAAA,GAAAA,GAAH,gGAQLE,EAAaF,EAAAA,GAAAA,EAAH,yIAUVG,EAAaH,EAAAA,GAAAA,EAAH,+G,SCavB,EAhCgB,WACd,IAAQI,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOR,EAAP,KAAgBS,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACRlB,EAAgBc,GAAIK,KAAKF,EAC1B,GAAE,CAACH,IAECN,GAKH,8BACGA,GAAWA,EAAQY,OAAS,GAC3B,SAACX,EAAD,UACGD,EAAQa,KAAI,YAA8B,IAA3BP,EAA0B,EAA1BA,GAAIQ,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,UAACZ,EAAD,YACE,UAACC,EAAD,qBAAoBU,MACpB,uBAAIC,MAFMT,EAKf,OAGH,SAACD,EAAD,0DAjBG,IAqBV,C,sBCnCD,SAASW,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOd,KAAKS,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["Fetch/getMovieReviews.jsx","components/Reviews/Reviews.style.js","components/Reviews/Reviews.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["async function getMovieReviews(movieId) {\n  const key = '9f20d64b7d570e0ac3d9098807701877';\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews`;\n  const filter = `?api_key=${key}&language=en-US&page=1`;\n\n  const response = await fetch(`${url}${filter}`);\n  const data = await response.json();\n  return data.results;\n}\n\nexport default getMovieReviews;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n`;\n\nexport const Items = styled.li`\n  margin-bottom: 30px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const AuthorName = styled.p`\n  margin-bottom: 10px;\n  font-size: 25px;\n  font-weight: 700;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const NotReviews = styled.p`\n  margin-top: 10px;\n  font-size: 20px;\n  font-weight: 600;\n\n  text-align: center;\n`;\n","import getMovieReviews from 'Fetch/getMovieReviews';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { AuthorName, Items, List, NotReviews } from './Reviews.style';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [results, setResults] = useState([]);\n\n  useEffect(() => {\n    getMovieReviews(id).then(setResults);\n  }, [id]);\n\n  if (!results) {\n    return null;\n  }\n\n  return (\n    <>\n      {results && results.length > 0 ? (\n        <List>\n          {results.map(({ id, author, content }) => {\n            return (\n              <Items key={id}>\n                <AuthorName>Author:{author}</AuthorName>\n                <p>{content}</p>\n              </Items>\n            );\n          })}\n        </List>\n      ) : (\n        <NotReviews>We don't have any reviews for this movie </NotReviews>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["getMovieReviews","movieId","url","filter","fetch","response","json","data","results","List","styled","Items","AuthorName","NotReviews","id","useParams","useState","setResults","useEffect","then","length","map","author","content","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}